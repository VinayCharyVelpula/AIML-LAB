graph={'0':['1','3'],
   '1':['2','5','6'],
   '2':['1','3','4','5'],
   '3':['0','4','2'],
   '4':['2','3','6'],
   '5':['1','2'],
   '6':['1','4']}
visited=[]
queue=[]
def bfs(visited,graph,node):
    visited.append(node)
    queue.append(node)
    while queue:
        m=queue.pop(0)
        print(m,end=" ")
        for neighbour in graph[m]:
            if neighbour not in visited:
                visited.append(neighbour)
                queue.append(neighbour)
print("following is breadth first search")
bfs(visited,graph,'0')
visited=set()
def dfs(node,visited,graph):
        if node not in visited:
            print(node)
            visited.add(node)
            for i in graph[node]:
                dfs(i,visited,graph)
print("\n following is depth first search")
dfs("0",visited,graph) 
